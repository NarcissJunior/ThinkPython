import time

fermat_a = 2
fermat_b = 2
fermat_c = 3
fermat_n = 2

triangle_a = 2
triangle_b = 2
triangle_c = 4

def show_date(start_time):
    start_time = int(start_time)
    minutes = start_time / 60
    hours = minutes / 60
    days = hours / 24
    months = days / 30
    years = months / 12
    decades = years / 10

    print("start_time", start_time)
    print("minutes", minutes)
    print("hours", hours)
    print("days", days)
    print("months", months)
    print("years", years)
    print("decades", decades)
    print("\n\n")

def show_date_recursion(number, n):
    if n == 2:
        print("seconds:", number)
    if n == 0:
        number = number / 24
        print("days:", number)
        return
    else:
        number = number / 60
        print("result:", number)
        show_date_recursion(number, n-1)

def check_fermat(a: int, b: int, c: int, n: int) -> str:
    if n < 2:
        print("N must be higher than 2")
        return

    first_result = a**n
    second_result = b**n
    third_result = c**n
    comparison = first_result + second_result
    if comparison == third_result:
        print("Holy smokes, Fermat was wrong!")
    else:
        print("No, that doesn't work.")

def check_fermat_input():
    a_input = input("Digit A:")
    b_input = input("Digit B:")
    c_input = input("Digit C:")
    n_input = input("Digit N:")
    check_fermat(int(float(a_input)), int(float(b_input)), int(float(c_input)), int(float(n_input)))

def is_triangle(a: int, b: int, c: int, n: int) -> str:
    if (a <= b + c) and (b <= a + c) and (c <= a + b):
        print("That's a triangle!!")
    else:
        print("That's NOT a triangle!")


def is_triangle_input():
    a_input = input("Digit first triangle size:")
    b_input = input("Digit second triangle size:")
    c_input = input("Digit third triangle size:")
    is_triangle(int(float(a_input)), int(float(b_input)), int(float(c_input)), 2)

show_date(time.time())
show_date_recursion(int(time.time()), 2)

check_fermat(fermat_a, fermat_b, fermat_c, fermat_n)
check_fermat_input()

is_triangle(triangle_a, triangle_b, triangle_c, 2)
is_triangle_input()